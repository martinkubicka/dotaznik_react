{"ast":null,"code":"import React from 'react';\nexport default function HandleSubmit(e) {\n  e.preventDefault();\n  /** prevention to not refreshing page after clicking submit button */\n\n  let countInvalid = 0;\n  /** counter for detecting if there is invalid input */\n\n  let countData = 0;\n  /** counting score */\n\n  if (nervous === \"\") {\n    /** if nervous value is empty show invalid input alert */\n    setInvalidNervous(\"form-check-input is-invalid\");\n    countInvalid = 1;\n  } else {\n    if (nervous === \"no\") {\n      /** if nervous value is no increase score */\n      countData = countData + 1;\n    }\n\n    setInvalidNervous(\"form-check-input\");\n    /** hide alert */\n  }\n\n  if (sport === \"\") {\n    /** if sport value is empty show invalid input alert */\n    setInvalidSport(\"form-check-input is-invalid\");\n    countInvalid = 1;\n  } else {\n    if (sport === \"yes\") {\n      /** if sport value is yes increase score */\n      countData = countData + 1;\n    }\n\n    setInvalidSport(\"form-check-input\");\n    /** hide alert */\n  }\n\n  if (happy === \"\") {\n    /** if happy value is empty show invalid input alert */\n    setInvalidHappy(\"form-check-input is-invalid\");\n    countInvalid = 1;\n  } else {\n    if (happy === \"yes\") {\n      /** if happy value is yes increase score */\n      countData = countData + 1;\n    }\n\n    setInvalidHappy(\"form-check-input\");\n    /** hide alert */\n  }\n\n  if (tired === \"\") {\n    /** if tired value is empty show invalid input alert */\n    setInvalidTired(\"form-check-input is-invalid\");\n    countInvalid = 1;\n  } else {\n    if (tired === \"no\") {\n      /** if tired value is no increase score */\n      countData = countData + 1;\n    }\n\n    setInvalidTired(\"form-check-input\");\n    /** hide alert */\n  }\n\n  if (sliderValue >= 5) {\n    /** if slider value is >= 5 than increase score */\n    countData = countData + 1;\n  }\n\n  if (selectInputValue === \"3\") {\n    countData = countData + 2;\n  } else if (selectInputValue === \"2\") {\n    countData = countData + 1;\n  }\n\n  if (countInvalid === 0) {\n    /** if there was no bad input */\n    if (countData > 3) {\n      /** show positive alert */\n      setText(\"It looks like you're going to have a good day :)\");\n      setAlertDiv(\"alert alert-success alert-dismissible w-25 mx-auto fade show\");\n    } else {\n      /** show negative alert */\n      setText(\"It looks like you're going to have a bad day :(\");\n      setAlertDiv(\"alert alert-danger alert-dismissible w-25 mx-auto fade show\");\n    }\n  }\n}\n_c = HandleSubmit;\n\nvar _c;\n\n$RefreshReg$(_c, \"HandleSubmit\");","map":{"version":3,"names":["React","HandleSubmit","e","preventDefault","countInvalid","countData","nervous","setInvalidNervous","sport","setInvalidSport","happy","setInvalidHappy","tired","setInvalidTired","sliderValue","selectInputValue","setText","setAlertDiv"],"sources":["/Users/martinkubicka/Documents/howdy_dotaznik/src/HandleSubmit.js"],"sourcesContent":["import React from 'react'\n\nexport default function HandleSubmit(e) {\n    e.preventDefault() /** prevention to not refreshing page after clicking submit button */\n\n    let countInvalid = 0; /** counter for detecting if there is invalid input */\n    let countData = 0; /** counting score */\n\n    if(nervous === \"\") { /** if nervous value is empty show invalid input alert */\n      setInvalidNervous(\"form-check-input is-invalid\")\n      countInvalid = 1\n    } else {\n      if (nervous === \"no\") { /** if nervous value is no increase score */\n        countData = countData + 1\n      }\n      setInvalidNervous(\"form-check-input\") /** hide alert */\n    }\n\n    if(sport === \"\") { /** if sport value is empty show invalid input alert */\n      setInvalidSport(\"form-check-input is-invalid\")\n      countInvalid = 1\n    } else {\n      if (sport === \"yes\") { /** if sport value is yes increase score */\n        countData = countData + 1\n      }\n      setInvalidSport(\"form-check-input\") /** hide alert */\n    }\n\n    if(happy === \"\") { /** if happy value is empty show invalid input alert */\n      setInvalidHappy(\"form-check-input is-invalid\")\n      countInvalid = 1\n    } else {\n      if (happy === \"yes\") { /** if happy value is yes increase score */\n        countData = countData + 1\n      }\n      setInvalidHappy(\"form-check-input\") /** hide alert */\n    }\n\n    if(tired === \"\") { /** if tired value is empty show invalid input alert */\n      setInvalidTired(\"form-check-input is-invalid\")\n      countInvalid = 1\n    } else {\n      if (tired === \"no\") { /** if tired value is no increase score */\n        countData = countData + 1\n      }\n      setInvalidTired(\"form-check-input\") /** hide alert */\n    }\n\n    if (sliderValue >= 5) { /** if slider value is >= 5 than increase score */\n      countData = countData + 1\n    }\n\n    if (selectInputValue === \"3\") {\n      countData = countData + 2\n    } else if (selectInputValue === \"2\") {\n      countData = countData + 1\n    }\n\n    if (countInvalid === 0) { /** if there was no bad input */\n      if (countData > 3) { /** show positive alert */\n        setText(\"It looks like you're going to have a good day :)\")\n        setAlertDiv(\"alert alert-success alert-dismissible w-25 mx-auto fade show\")\n      } else { /** show negative alert */\n        setText(\"It looks like you're going to have a bad day :(\")\n        setAlertDiv(\"alert alert-danger alert-dismissible w-25 mx-auto fade show\")\n      }\n    }\n\n}\n"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,eAAe,SAASC,YAAT,CAAsBC,CAAtB,EAAyB;EACpCA,CAAC,CAACC,cAAF;EAAmB;;EAEnB,IAAIC,YAAY,GAAG,CAAnB;EAAsB;;EACtB,IAAIC,SAAS,GAAG,CAAhB;EAAmB;;EAEnB,IAAGC,OAAO,KAAK,EAAf,EAAmB;IAAE;IACnBC,iBAAiB,CAAC,6BAAD,CAAjB;IACAH,YAAY,GAAG,CAAf;EACD,CAHD,MAGO;IACL,IAAIE,OAAO,KAAK,IAAhB,EAAsB;MAAE;MACtBD,SAAS,GAAGA,SAAS,GAAG,CAAxB;IACD;;IACDE,iBAAiB,CAAC,kBAAD,CAAjB;IAAsC;EACvC;;EAED,IAAGC,KAAK,KAAK,EAAb,EAAiB;IAAE;IACjBC,eAAe,CAAC,6BAAD,CAAf;IACAL,YAAY,GAAG,CAAf;EACD,CAHD,MAGO;IACL,IAAII,KAAK,KAAK,KAAd,EAAqB;MAAE;MACrBH,SAAS,GAAGA,SAAS,GAAG,CAAxB;IACD;;IACDI,eAAe,CAAC,kBAAD,CAAf;IAAoC;EACrC;;EAED,IAAGC,KAAK,KAAK,EAAb,EAAiB;IAAE;IACjBC,eAAe,CAAC,6BAAD,CAAf;IACAP,YAAY,GAAG,CAAf;EACD,CAHD,MAGO;IACL,IAAIM,KAAK,KAAK,KAAd,EAAqB;MAAE;MACrBL,SAAS,GAAGA,SAAS,GAAG,CAAxB;IACD;;IACDM,eAAe,CAAC,kBAAD,CAAf;IAAoC;EACrC;;EAED,IAAGC,KAAK,KAAK,EAAb,EAAiB;IAAE;IACjBC,eAAe,CAAC,6BAAD,CAAf;IACAT,YAAY,GAAG,CAAf;EACD,CAHD,MAGO;IACL,IAAIQ,KAAK,KAAK,IAAd,EAAoB;MAAE;MACpBP,SAAS,GAAGA,SAAS,GAAG,CAAxB;IACD;;IACDQ,eAAe,CAAC,kBAAD,CAAf;IAAoC;EACrC;;EAED,IAAIC,WAAW,IAAI,CAAnB,EAAsB;IAAE;IACtBT,SAAS,GAAGA,SAAS,GAAG,CAAxB;EACD;;EAED,IAAIU,gBAAgB,KAAK,GAAzB,EAA8B;IAC5BV,SAAS,GAAGA,SAAS,GAAG,CAAxB;EACD,CAFD,MAEO,IAAIU,gBAAgB,KAAK,GAAzB,EAA8B;IACnCV,SAAS,GAAGA,SAAS,GAAG,CAAxB;EACD;;EAED,IAAID,YAAY,KAAK,CAArB,EAAwB;IAAE;IACxB,IAAIC,SAAS,GAAG,CAAhB,EAAmB;MAAE;MACnBW,OAAO,CAAC,kDAAD,CAAP;MACAC,WAAW,CAAC,8DAAD,CAAX;IACD,CAHD,MAGO;MAAE;MACPD,OAAO,CAAC,iDAAD,CAAP;MACAC,WAAW,CAAC,6DAAD,CAAX;IACD;EACF;AAEJ;KAlEuBhB,Y"},"metadata":{},"sourceType":"module"}